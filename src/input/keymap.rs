//! Built-in keymap to support libchewing compatibility
//!
//! Original libchewing API accepts C char as input and intepret the char as
//! keycode. Various configured KB types then convert the keycode to corresponding
//! keysyms. Both the original keycode and keysym definition are C char so they
//! were easily confused.
//!
//! It's recommended to use full featured library like xkbcommon to map keycode
//! to keysyms.

use crate::input::{KeyboardEvent, keycode::Keycode, keysym::Keysym};

macro_rules! keymap {
    ($($k:expr => ($code:expr, $ksym:expr, $state:expr)),* $(,)?) => {{
        [$(($k, KeyboardEvent { code: $code, ksym: Keysym::from_char($ksym), state: $state }),)*]
    }};
}

macro_rules! keypad_map {
    ($($k:expr => ($code:expr, $ksym:expr, $state:expr)),* $(,)?) => {{
        [$(($k, KeyboardEvent { code: $code, ksym: $ksym, state: $state }),)*]
    }};
}

pub type Keymap = [(u8, KeyboardEvent)];

/// Map the ascii to keycode then to a key event
pub fn map_ascii(keymap: &Keymap, ascii: u8) -> KeyboardEvent {
    keymap
        .iter()
        .find(|item| item.0 == ascii)
        .map(|item| item.1)
        .unwrap_or_default()
}

pub static KEYPAD_MAP: [(u8, KeyboardEvent); 16] = keypad_map! {
    b'1' => (Keycode::KEY_KP1,        Keysym::KP_1,        KeyboardEvent::NUMLOCK_MASK),
    b'2' => (Keycode::KEY_KP2,        Keysym::KP_2,        KeyboardEvent::NUMLOCK_MASK),
    b'3' => (Keycode::KEY_KP3,        Keysym::KP_3,        KeyboardEvent::NUMLOCK_MASK),
    b'4' => (Keycode::KEY_KP4,        Keysym::KP_4,        KeyboardEvent::NUMLOCK_MASK),
    b'5' => (Keycode::KEY_KP5,        Keysym::KP_5,        KeyboardEvent::NUMLOCK_MASK),
    b'6' => (Keycode::KEY_KP6,        Keysym::KP_6,        KeyboardEvent::NUMLOCK_MASK),
    b'7' => (Keycode::KEY_KP7,        Keysym::KP_7,        KeyboardEvent::NUMLOCK_MASK),
    b'8' => (Keycode::KEY_KP8,        Keysym::KP_8,        KeyboardEvent::NUMLOCK_MASK),
    b'9' => (Keycode::KEY_KP9,        Keysym::KP_9,        KeyboardEvent::NUMLOCK_MASK),
    b'0' => (Keycode::KEY_KP0,        Keysym::KP_0,        KeyboardEvent::NUMLOCK_MASK),
    b'+' => (Keycode::KEY_KPPLUS,     Keysym::KP_Add,      KeyboardEvent::NUMLOCK_MASK),
    b'-' => (Keycode::KEY_KPMINUS,    Keysym::KP_Subtract, KeyboardEvent::NUMLOCK_MASK),
    b'*' => (Keycode::KEY_KPASTERISK, Keysym::KP_Multiply, KeyboardEvent::NUMLOCK_MASK),
    b'/' => (Keycode::KEY_KPSLASH,    Keysym::KP_Divide,   KeyboardEvent::NUMLOCK_MASK),
    b'.' => (Keycode::KEY_KPDOT,      Keysym::KP_Decimal,  KeyboardEvent::NUMLOCK_MASK),
    b'=' => (Keycode::KEY_KPEQUAL,    Keysym::KP_Equal,    KeyboardEvent::NUMLOCK_MASK),
};

pub static QWERTY_MAP: [(u8, KeyboardEvent); 95] = keymap! {
    b'1' => (Keycode::KEY_1,          '1', 0),
    b'2' => (Keycode::KEY_2,          '2', 0),
    b'3' => (Keycode::KEY_3,          '3', 0),
    b'4' => (Keycode::KEY_4,          '4', 0),
    b'5' => (Keycode::KEY_5,          '5', 0),
    b'6' => (Keycode::KEY_6,          '6', 0),
    b'7' => (Keycode::KEY_7,          '7', 0),
    b'8' => (Keycode::KEY_8,          '8', 0),
    b'9' => (Keycode::KEY_9,          '9', 0),
    b'0' => (Keycode::KEY_0,          '0', 0),
    b'-' => (Keycode::KEY_MINUS,      '-', 0),
    b'=' => (Keycode::KEY_EQUAL,      '=', 0),
    b'\\' => (Keycode::KEY_BACKSLASH, '\\', 0),
    b'`' => (Keycode::KEY_GRAVE,      '`', 0),
    b'q' => (Keycode::KEY_Q,          'q', 0),
    b'w' => (Keycode::KEY_W,          'w', 0),
    b'e' => (Keycode::KEY_E,          'e', 0),
    b'r' => (Keycode::KEY_R,          'r', 0),
    b't' => (Keycode::KEY_T,          't', 0),
    b'y' => (Keycode::KEY_Y,          'y', 0),
    b'u' => (Keycode::KEY_U,          'u', 0),
    b'i' => (Keycode::KEY_I,          'i', 0),
    b'o' => (Keycode::KEY_O,          'o', 0),
    b'p' => (Keycode::KEY_P,          'p', 0),
    b'[' => (Keycode::KEY_LEFTBRACE,  '[', 0),
    b']' => (Keycode::KEY_RIGHTBRACE, ']', 0),
    b'a' => (Keycode::KEY_A,          'a', 0),
    b's' => (Keycode::KEY_S,          's', 0),
    b'd' => (Keycode::KEY_D,          'd', 0),
    b'f' => (Keycode::KEY_F,          'f', 0),
    b'g' => (Keycode::KEY_G,          'g', 0),
    b'h' => (Keycode::KEY_H,          'h', 0),
    b'j' => (Keycode::KEY_J,          'j', 0),
    b'k' => (Keycode::KEY_K,          'k', 0),
    b'l' => (Keycode::KEY_L,          'l', 0),
    b';' => (Keycode::KEY_SEMICOLON,  ';', 0),
    b'\'' => (Keycode::KEY_APOSTROPHE,'\'', 0),
    b'z' => (Keycode::KEY_Z,          'z', 0),
    b'x' => (Keycode::KEY_X,          'x', 0),
    b'c' => (Keycode::KEY_C,          'c', 0),
    b'v' => (Keycode::KEY_V,          'v', 0),
    b'b' => (Keycode::KEY_B,          'b', 0),
    b'n' => (Keycode::KEY_N,          'n', 0),
    b'm' => (Keycode::KEY_M,          'm', 0),
    b',' => (Keycode::KEY_COMMA,      ',', 0),
    b'.' => (Keycode::KEY_DOT,        '.', 0),
    b'/' => (Keycode::KEY_SLASH,      '/', 0),
    b' ' => (Keycode::KEY_SPACE,      ' ', 0),
    b'!' => (Keycode::KEY_1,          '!', KeyboardEvent::SHIFT_MASK),
    b'@' => (Keycode::KEY_2,          '@', KeyboardEvent::SHIFT_MASK),
    b'#' => (Keycode::KEY_3,          '#', KeyboardEvent::SHIFT_MASK),
    b'$' => (Keycode::KEY_4,          '$', KeyboardEvent::SHIFT_MASK),
    b'%' => (Keycode::KEY_5,          '%', KeyboardEvent::SHIFT_MASK),
    b'^' => (Keycode::KEY_6,          '^', KeyboardEvent::SHIFT_MASK),
    b'&' => (Keycode::KEY_7,          '&', KeyboardEvent::SHIFT_MASK),
    b'*' => (Keycode::KEY_8,          '*', KeyboardEvent::SHIFT_MASK),
    b'(' => (Keycode::KEY_9,          '(', KeyboardEvent::SHIFT_MASK),
    b')' => (Keycode::KEY_0,          ')', KeyboardEvent::SHIFT_MASK),
    b'_' => (Keycode::KEY_MINUS,      '_', KeyboardEvent::SHIFT_MASK),
    b'+' => (Keycode::KEY_EQUAL,      '+', KeyboardEvent::SHIFT_MASK),
    b'|' => (Keycode::KEY_BACKSLASH,  '|', KeyboardEvent::SHIFT_MASK),
    b'~' => (Keycode::KEY_GRAVE,      '~', KeyboardEvent::SHIFT_MASK),
    b'Q' => (Keycode::KEY_Q,          'Q', KeyboardEvent::SHIFT_MASK),
    b'W' => (Keycode::KEY_W,          'W', KeyboardEvent::SHIFT_MASK),
    b'E' => (Keycode::KEY_E,          'E', KeyboardEvent::SHIFT_MASK),
    b'R' => (Keycode::KEY_R,          'R', KeyboardEvent::SHIFT_MASK),
    b'T' => (Keycode::KEY_T,          'T', KeyboardEvent::SHIFT_MASK),
    b'Y' => (Keycode::KEY_Y,          'Y', KeyboardEvent::SHIFT_MASK),
    b'U' => (Keycode::KEY_U,          'U', KeyboardEvent::SHIFT_MASK),
    b'I' => (Keycode::KEY_I,          'I', KeyboardEvent::SHIFT_MASK),
    b'O' => (Keycode::KEY_O,          'O', KeyboardEvent::SHIFT_MASK),
    b'P' => (Keycode::KEY_P,          'P', KeyboardEvent::SHIFT_MASK),
    b'{' => (Keycode::KEY_LEFTBRACE,  '{', KeyboardEvent::SHIFT_MASK),
    b'}' => (Keycode::KEY_RIGHTBRACE, '}', KeyboardEvent::SHIFT_MASK),
    b'A' => (Keycode::KEY_A,          'A', KeyboardEvent::SHIFT_MASK),
    b'S' => (Keycode::KEY_S,          'S', KeyboardEvent::SHIFT_MASK),
    b'D' => (Keycode::KEY_D,          'D', KeyboardEvent::SHIFT_MASK),
    b'F' => (Keycode::KEY_F,          'F', KeyboardEvent::SHIFT_MASK),
    b'G' => (Keycode::KEY_G,          'G', KeyboardEvent::SHIFT_MASK),
    b'H' => (Keycode::KEY_H,          'H', KeyboardEvent::SHIFT_MASK),
    b'J' => (Keycode::KEY_J,          'J', KeyboardEvent::SHIFT_MASK),
    b'K' => (Keycode::KEY_K,          'K', KeyboardEvent::SHIFT_MASK),
    b'L' => (Keycode::KEY_L,          'L', KeyboardEvent::SHIFT_MASK),
    b':' => (Keycode::KEY_SEMICOLON,  ':', KeyboardEvent::SHIFT_MASK),
    b'"' => (Keycode::KEY_APOSTROPHE, '"', KeyboardEvent::SHIFT_MASK),
    b'Z' => (Keycode::KEY_Z,          'Z', KeyboardEvent::SHIFT_MASK),
    b'X' => (Keycode::KEY_X,          'X', KeyboardEvent::SHIFT_MASK),
    b'C' => (Keycode::KEY_C,          'C', KeyboardEvent::SHIFT_MASK),
    b'V' => (Keycode::KEY_V,          'V', KeyboardEvent::SHIFT_MASK),
    b'B' => (Keycode::KEY_B,          'B', KeyboardEvent::SHIFT_MASK),
    b'N' => (Keycode::KEY_N,          'N', KeyboardEvent::SHIFT_MASK),
    b'M' => (Keycode::KEY_M,          'M', KeyboardEvent::SHIFT_MASK),
    b'<' => (Keycode::KEY_COMMA,      '<', KeyboardEvent::SHIFT_MASK),
    b'>' => (Keycode::KEY_DOT,        '>', KeyboardEvent::SHIFT_MASK),
    b'?' => (Keycode::KEY_SLASH,      '?', KeyboardEvent::SHIFT_MASK),
};

pub static DVORAK_MAP: [(u8, KeyboardEvent); 95] = keymap! {
    b'1' => (Keycode::KEY_1,          '1', 0),
    b'2' => (Keycode::KEY_2,          '2', 0),
    b'3' => (Keycode::KEY_3,          '3', 0),
    b'4' => (Keycode::KEY_4,          '4', 0),
    b'5' => (Keycode::KEY_5,          '5', 0),
    b'6' => (Keycode::KEY_6,          '6', 0),
    b'7' => (Keycode::KEY_7,          '7', 0),
    b'8' => (Keycode::KEY_8,          '8', 0),
    b'9' => (Keycode::KEY_9,          '9', 0),
    b'0' => (Keycode::KEY_0,          '0', 0),
    b'-' => (Keycode::KEY_MINUS,      '[', 0),
    b'=' => (Keycode::KEY_EQUAL,      ']', 0),
    b'\\' => (Keycode::KEY_BACKSLASH, '\\', 0),
    b'`' => (Keycode::KEY_GRAVE,      '`', 0),
    b'q' => (Keycode::KEY_Q,          '\'', 0),
    b'w' => (Keycode::KEY_W,          ',', 0),
    b'e' => (Keycode::KEY_E,          '.', 0),
    b'r' => (Keycode::KEY_R,          'p', 0),
    b't' => (Keycode::KEY_T,          'y', 0),
    b'y' => (Keycode::KEY_Y,          'f', 0),
    b'u' => (Keycode::KEY_U,          'g', 0),
    b'i' => (Keycode::KEY_I,          'c', 0),
    b'o' => (Keycode::KEY_O,          'r', 0),
    b'p' => (Keycode::KEY_P,          'l', 0),
    b'[' => (Keycode::KEY_LEFTBRACE,  '/', 0),
    b']' => (Keycode::KEY_RIGHTBRACE, '=', 0),
    b'a' => (Keycode::KEY_A,          'a', 0),
    b's' => (Keycode::KEY_S,          'o', 0),
    b'd' => (Keycode::KEY_D,          'e', 0),
    b'f' => (Keycode::KEY_F,          'u', 0),
    b'g' => (Keycode::KEY_G,          'i', 0),
    b'h' => (Keycode::KEY_H,          'd', 0),
    b'j' => (Keycode::KEY_J,          'h', 0),
    b'k' => (Keycode::KEY_K,          't', 0),
    b'l' => (Keycode::KEY_L,          'n', 0),
    b';' => (Keycode::KEY_SEMICOLON,  's', 0),
    b'\'' => (Keycode::KEY_APOSTROPHE,'-', 0),
    b'z' => (Keycode::KEY_Z,          ';', 0),
    b'x' => (Keycode::KEY_X,          'q', 0),
    b'c' => (Keycode::KEY_C,          'j', 0),
    b'v' => (Keycode::KEY_V,          'k', 0),
    b'b' => (Keycode::KEY_B,          'x', 0),
    b'n' => (Keycode::KEY_N,          'b', 0),
    b'm' => (Keycode::KEY_M,          'm', 0),
    b',' => (Keycode::KEY_COMMA,      'w', 0),
    b'.' => (Keycode::KEY_DOT,        'v', 0),
    b'/' => (Keycode::KEY_SLASH,      'z', 0),
    b' ' => (Keycode::KEY_SPACE,      ' ', 0),
    b'!' => (Keycode::KEY_1,          '!', KeyboardEvent::SHIFT_MASK),
    b'@' => (Keycode::KEY_2,          '@', KeyboardEvent::SHIFT_MASK),
    b'#' => (Keycode::KEY_3,          '#', KeyboardEvent::SHIFT_MASK),
    b'$' => (Keycode::KEY_4,          '$', KeyboardEvent::SHIFT_MASK),
    b'%' => (Keycode::KEY_5,          '%', KeyboardEvent::SHIFT_MASK),
    b'^' => (Keycode::KEY_6,          '^', KeyboardEvent::SHIFT_MASK),
    b'&' => (Keycode::KEY_7,          '&', KeyboardEvent::SHIFT_MASK),
    b'*' => (Keycode::KEY_8,          '*', KeyboardEvent::SHIFT_MASK),
    b'(' => (Keycode::KEY_9,          '(', KeyboardEvent::SHIFT_MASK),
    b')' => (Keycode::KEY_0,          ')', KeyboardEvent::SHIFT_MASK),
    b'_' => (Keycode::KEY_MINUS,      '{', KeyboardEvent::SHIFT_MASK),
    b'+' => (Keycode::KEY_EQUAL,      '}', KeyboardEvent::SHIFT_MASK),
    b'|' => (Keycode::KEY_BACKSLASH,  '|', KeyboardEvent::SHIFT_MASK),
    b'~' => (Keycode::KEY_GRAVE,      '~', KeyboardEvent::SHIFT_MASK),
    b'Q' => (Keycode::KEY_Q,          '"', KeyboardEvent::SHIFT_MASK),
    b'W' => (Keycode::KEY_W,          '<', KeyboardEvent::SHIFT_MASK),
    b'E' => (Keycode::KEY_E,          '>', KeyboardEvent::SHIFT_MASK),
    b'R' => (Keycode::KEY_R,          'P', KeyboardEvent::SHIFT_MASK),
    b'T' => (Keycode::KEY_T,          'Y', KeyboardEvent::SHIFT_MASK),
    b'Y' => (Keycode::KEY_Y,          'F', KeyboardEvent::SHIFT_MASK),
    b'U' => (Keycode::KEY_U,          'G', KeyboardEvent::SHIFT_MASK),
    b'I' => (Keycode::KEY_I,          'C', KeyboardEvent::SHIFT_MASK),
    b'O' => (Keycode::KEY_O,          'R', KeyboardEvent::SHIFT_MASK),
    b'P' => (Keycode::KEY_P,          'L', KeyboardEvent::SHIFT_MASK),
    b'{' => (Keycode::KEY_LEFTBRACE,  '?', KeyboardEvent::SHIFT_MASK),
    b'}' => (Keycode::KEY_RIGHTBRACE, '+', KeyboardEvent::SHIFT_MASK),
    b'A' => (Keycode::KEY_A,          'A', KeyboardEvent::SHIFT_MASK),
    b'S' => (Keycode::KEY_S,          'O', KeyboardEvent::SHIFT_MASK),
    b'D' => (Keycode::KEY_D,          'E', KeyboardEvent::SHIFT_MASK),
    b'F' => (Keycode::KEY_F,          'U', KeyboardEvent::SHIFT_MASK),
    b'G' => (Keycode::KEY_G,          'I', KeyboardEvent::SHIFT_MASK),
    b'H' => (Keycode::KEY_H,          'D', KeyboardEvent::SHIFT_MASK),
    b'J' => (Keycode::KEY_J,          'H', KeyboardEvent::SHIFT_MASK),
    b'K' => (Keycode::KEY_K,          'T', KeyboardEvent::SHIFT_MASK),
    b'L' => (Keycode::KEY_L,          'N', KeyboardEvent::SHIFT_MASK),
    b':' => (Keycode::KEY_SEMICOLON,  'S', KeyboardEvent::SHIFT_MASK),
    b'"' => (Keycode::KEY_APOSTROPHE, '_', KeyboardEvent::SHIFT_MASK),
    b'Z' => (Keycode::KEY_Z,          ':', KeyboardEvent::SHIFT_MASK),
    b'X' => (Keycode::KEY_X,          'Q', KeyboardEvent::SHIFT_MASK),
    b'C' => (Keycode::KEY_C,          'J', KeyboardEvent::SHIFT_MASK),
    b'V' => (Keycode::KEY_V,          'K', KeyboardEvent::SHIFT_MASK),
    b'B' => (Keycode::KEY_B,          'X', KeyboardEvent::SHIFT_MASK),
    b'N' => (Keycode::KEY_N,          'B', KeyboardEvent::SHIFT_MASK),
    b'M' => (Keycode::KEY_M,          'M', KeyboardEvent::SHIFT_MASK),
    b'<' => (Keycode::KEY_COMMA,      'W', KeyboardEvent::SHIFT_MASK),
    b'>' => (Keycode::KEY_DOT,        'V', KeyboardEvent::SHIFT_MASK),
    b'?' => (Keycode::KEY_SLASH,      'Z', KeyboardEvent::SHIFT_MASK),
};

pub static INVERTED_DVORAK_MAP: [(u8, KeyboardEvent); 95] = keymap! {
    b'1' => (Keycode::KEY_1,          '1', 0),
    b'2' => (Keycode::KEY_2,          '2', 0),
    b'3' => (Keycode::KEY_3,          '3', 0),
    b'4' => (Keycode::KEY_4,          '4', 0),
    b'5' => (Keycode::KEY_5,          '5', 0),
    b'6' => (Keycode::KEY_6,          '6', 0),
    b'7' => (Keycode::KEY_7,          '7', 0),
    b'8' => (Keycode::KEY_8,          '8', 0),
    b'9' => (Keycode::KEY_9,          '9', 0),
    b'0' => (Keycode::KEY_0,          '0', 0),
    b'[' => (Keycode::KEY_MINUS,      '[', 0),
    b']' => (Keycode::KEY_EQUAL,      ']', 0),
    b'\\' => (Keycode::KEY_BACKSLASH, '\\', 0),
    b'`' => (Keycode::KEY_GRAVE,      '`', 0),
    b'\'' => (Keycode::KEY_Q,         '\'', 0),
    b',' => (Keycode::KEY_W,          ',', 0),
    b'.' => (Keycode::KEY_E,          '.', 0),
    b'p' => (Keycode::KEY_R,          'p', 0),
    b'y' => (Keycode::KEY_T,          'y', 0),
    b'f' => (Keycode::KEY_Y,          'f', 0),
    b'g' => (Keycode::KEY_U,          'g', 0),
    b'c' => (Keycode::KEY_I,          'c', 0),
    b'r' => (Keycode::KEY_O,          'r', 0),
    b'l' => (Keycode::KEY_P,          'l', 0),
    b'/' => (Keycode::KEY_LEFTBRACE,  '/', 0),
    b'=' => (Keycode::KEY_RIGHTBRACE, '=', 0),
    b'a' => (Keycode::KEY_A,          'a', 0),
    b'o' => (Keycode::KEY_S,          'o', 0),
    b'e' => (Keycode::KEY_D,          'e', 0),
    b'u' => (Keycode::KEY_F,          'u', 0),
    b'i' => (Keycode::KEY_G,          'i', 0),
    b'd' => (Keycode::KEY_H,          'd', 0),
    b'h' => (Keycode::KEY_J,          'h', 0),
    b't' => (Keycode::KEY_K,          't', 0),
    b'n' => (Keycode::KEY_L,          'n', 0),
    b's' => (Keycode::KEY_SEMICOLON,  's', 0),
    b'-' => (Keycode::KEY_APOSTROPHE, '-', 0),
    b';' => (Keycode::KEY_Z,          ';', 0),
    b'q' => (Keycode::KEY_X,          'q', 0),
    b'j' => (Keycode::KEY_C,          'j', 0),
    b'k' => (Keycode::KEY_V,          'k', 0),
    b'x' => (Keycode::KEY_B,          'x', 0),
    b'b' => (Keycode::KEY_N,          'b', 0),
    b'm' => (Keycode::KEY_M,          'm', 0),
    b'w' => (Keycode::KEY_COMMA,      'w', 0),
    b'v' => (Keycode::KEY_DOT,        'v', 0),
    b'z' => (Keycode::KEY_SLASH,      'z', 0),
    b' ' => (Keycode::KEY_SPACE,      ' ', 0),
    b'!' => (Keycode::KEY_1,          '!', KeyboardEvent::SHIFT_MASK),
    b'@' => (Keycode::KEY_2,          '@', KeyboardEvent::SHIFT_MASK),
    b'#' => (Keycode::KEY_3,          '#', KeyboardEvent::SHIFT_MASK),
    b'$' => (Keycode::KEY_4,          '$', KeyboardEvent::SHIFT_MASK),
    b'%' => (Keycode::KEY_5,          '%', KeyboardEvent::SHIFT_MASK),
    b'^' => (Keycode::KEY_6,          '^', KeyboardEvent::SHIFT_MASK),
    b'&' => (Keycode::KEY_7,          '&', KeyboardEvent::SHIFT_MASK),
    b'*' => (Keycode::KEY_8,          '*', KeyboardEvent::SHIFT_MASK),
    b'(' => (Keycode::KEY_9,          '(', KeyboardEvent::SHIFT_MASK),
    b')' => (Keycode::KEY_0,          ')', KeyboardEvent::SHIFT_MASK),
    b'{' => (Keycode::KEY_MINUS,      '{', KeyboardEvent::SHIFT_MASK),
    b'}' => (Keycode::KEY_EQUAL,      '}', KeyboardEvent::SHIFT_MASK),
    b'|' => (Keycode::KEY_BACKSLASH,  '|', KeyboardEvent::SHIFT_MASK),
    b'~' => (Keycode::KEY_GRAVE,      '~', KeyboardEvent::SHIFT_MASK),
    b'"' => (Keycode::KEY_Q,          '"', KeyboardEvent::SHIFT_MASK),
    b'<' => (Keycode::KEY_W,          '<', KeyboardEvent::SHIFT_MASK),
    b'>' => (Keycode::KEY_E,          '>', KeyboardEvent::SHIFT_MASK),
    b'P' => (Keycode::KEY_R,          'P', KeyboardEvent::SHIFT_MASK),
    b'Y' => (Keycode::KEY_T,          'Y', KeyboardEvent::SHIFT_MASK),
    b'F' => (Keycode::KEY_Y,          'F', KeyboardEvent::SHIFT_MASK),
    b'G' => (Keycode::KEY_U,          'G', KeyboardEvent::SHIFT_MASK),
    b'C' => (Keycode::KEY_I,          'C', KeyboardEvent::SHIFT_MASK),
    b'R' => (Keycode::KEY_O,          'R', KeyboardEvent::SHIFT_MASK),
    b'L' => (Keycode::KEY_P,          'L', KeyboardEvent::SHIFT_MASK),
    b'?' => (Keycode::KEY_LEFTBRACE,  '?', KeyboardEvent::SHIFT_MASK),
    b'+' => (Keycode::KEY_RIGHTBRACE, '+', KeyboardEvent::SHIFT_MASK),
    b'A' => (Keycode::KEY_A,          'A', KeyboardEvent::SHIFT_MASK),
    b'O' => (Keycode::KEY_S,          'O', KeyboardEvent::SHIFT_MASK),
    b'E' => (Keycode::KEY_D,          'E', KeyboardEvent::SHIFT_MASK),
    b'U' => (Keycode::KEY_F,          'U', KeyboardEvent::SHIFT_MASK),
    b'I' => (Keycode::KEY_G,          'I', KeyboardEvent::SHIFT_MASK),
    b'D' => (Keycode::KEY_H,          'D', KeyboardEvent::SHIFT_MASK),
    b'H' => (Keycode::KEY_J,          'H', KeyboardEvent::SHIFT_MASK),
    b'T' => (Keycode::KEY_K,          'T', KeyboardEvent::SHIFT_MASK),
    b'N' => (Keycode::KEY_L,          'N', KeyboardEvent::SHIFT_MASK),
    b'S' => (Keycode::KEY_SEMICOLON,  'S', KeyboardEvent::SHIFT_MASK),
    b'_' => (Keycode::KEY_APOSTROPHE, '_', KeyboardEvent::SHIFT_MASK),
    b':' => (Keycode::KEY_Z,          ':', KeyboardEvent::SHIFT_MASK),
    b'Q' => (Keycode::KEY_X,          'Q', KeyboardEvent::SHIFT_MASK),
    b'J' => (Keycode::KEY_C,          'J', KeyboardEvent::SHIFT_MASK),
    b'K' => (Keycode::KEY_V,          'K', KeyboardEvent::SHIFT_MASK),
    b'X' => (Keycode::KEY_B,          'X', KeyboardEvent::SHIFT_MASK),
    b'B' => (Keycode::KEY_N,          'B', KeyboardEvent::SHIFT_MASK),
    b'M' => (Keycode::KEY_M,          'M', KeyboardEvent::SHIFT_MASK),
    b'W' => (Keycode::KEY_COMMA,      'W', KeyboardEvent::SHIFT_MASK),
    b'V' => (Keycode::KEY_DOT,        'V', KeyboardEvent::SHIFT_MASK),
    b'Z' => (Keycode::KEY_SLASH,      'Z', KeyboardEvent::SHIFT_MASK),
};

pub static INVERTED_QGMLWY_MAP: [(u8, KeyboardEvent); 95] = keymap! {
    b'1' => (Keycode::KEY_1,          '1', 0),
    b'2' => (Keycode::KEY_2,          '2', 0),
    b'3' => (Keycode::KEY_3,          '3', 0),
    b'4' => (Keycode::KEY_4,          '4', 0),
    b'5' => (Keycode::KEY_5,          '5', 0),
    b'6' => (Keycode::KEY_6,          '6', 0),
    b'7' => (Keycode::KEY_7,          '7', 0),
    b'8' => (Keycode::KEY_8,          '8', 0),
    b'9' => (Keycode::KEY_9,          '9', 0),
    b'0' => (Keycode::KEY_0,          '0', 0),
    b'-' => (Keycode::KEY_MINUS,      '-', 0),
    b'=' => (Keycode::KEY_EQUAL,      '=', 0),
    b'\\' => (Keycode::KEY_BACKSLASH, '\\', 0),
    b'`' => (Keycode::KEY_GRAVE,      '`', 0),
    b'q' => (Keycode::KEY_Q,          'q', 0),
    b'g' => (Keycode::KEY_W,          'g', 0),
    b'm' => (Keycode::KEY_E,          'm', 0),
    b'l' => (Keycode::KEY_R,          'l', 0),
    b'w' => (Keycode::KEY_T,          'w', 0),
    b'y' => (Keycode::KEY_Y,          'y', 0),
    b'f' => (Keycode::KEY_U,          'f', 0),
    b'u' => (Keycode::KEY_I,          'u', 0),
    b'b' => (Keycode::KEY_O,          'b', 0),
    b';' => (Keycode::KEY_P,          ';', 0),
    b'[' => (Keycode::KEY_LEFTBRACE,  '[', 0),
    b']' => (Keycode::KEY_RIGHTBRACE, ']', 0),
    b'd' => (Keycode::KEY_A,          'd', 0),
    b's' => (Keycode::KEY_S,          's', 0),
    b't' => (Keycode::KEY_D,          't', 0),
    b'n' => (Keycode::KEY_F,          'n', 0),
    b'r' => (Keycode::KEY_G,          'r', 0),
    b'i' => (Keycode::KEY_H,          'i', 0),
    b'a' => (Keycode::KEY_J,          'a', 0),
    b'e' => (Keycode::KEY_K,          'e', 0),
    b'o' => (Keycode::KEY_L,          'o', 0),
    b'h' => (Keycode::KEY_SEMICOLON,  'h', 0),
    b'\'' => (Keycode::KEY_APOSTROPHE,'\'', 0),
    b'z' => (Keycode::KEY_Z,          'z', 0),
    b'x' => (Keycode::KEY_X,          'x', 0),
    b'c' => (Keycode::KEY_C,          'c', 0),
    b'v' => (Keycode::KEY_V,          'v', 0),
    b'j' => (Keycode::KEY_B,          'j', 0),
    b'k' => (Keycode::KEY_N,          'k', 0),
    b'p' => (Keycode::KEY_M,          'p', 0),
    b',' => (Keycode::KEY_COMMA,      ',', 0),
    b'.' => (Keycode::KEY_DOT,        '.', 0),
    b'/' => (Keycode::KEY_SLASH,      '/', 0),
    b' ' => (Keycode::KEY_SPACE,      ' ', 0),
    b'!' => (Keycode::KEY_1,          '!', KeyboardEvent::SHIFT_MASK),
    b'@' => (Keycode::KEY_2,          '@', KeyboardEvent::SHIFT_MASK),
    b'#' => (Keycode::KEY_3,          '#', KeyboardEvent::SHIFT_MASK),
    b'$' => (Keycode::KEY_4,          '$', KeyboardEvent::SHIFT_MASK),
    b'%' => (Keycode::KEY_5,          '%', KeyboardEvent::SHIFT_MASK),
    b'^' => (Keycode::KEY_6,          '^', KeyboardEvent::SHIFT_MASK),
    b'&' => (Keycode::KEY_7,          '&', KeyboardEvent::SHIFT_MASK),
    b'*' => (Keycode::KEY_8,          '*', KeyboardEvent::SHIFT_MASK),
    b'(' => (Keycode::KEY_9,          '(', KeyboardEvent::SHIFT_MASK),
    b')' => (Keycode::KEY_0,          ')', KeyboardEvent::SHIFT_MASK),
    b'_' => (Keycode::KEY_MINUS,      '_', KeyboardEvent::SHIFT_MASK),
    b'+' => (Keycode::KEY_EQUAL,      '+', KeyboardEvent::SHIFT_MASK),
    b'|' => (Keycode::KEY_BACKSLASH,  '|', KeyboardEvent::SHIFT_MASK),
    b'~' => (Keycode::KEY_GRAVE,      '~', KeyboardEvent::SHIFT_MASK),
    b'Q' => (Keycode::KEY_Q,          'Q', KeyboardEvent::SHIFT_MASK),
    b'G' => (Keycode::KEY_W,          'G', KeyboardEvent::SHIFT_MASK),
    b'M' => (Keycode::KEY_E,          'M', KeyboardEvent::SHIFT_MASK),
    b'L' => (Keycode::KEY_R,          'L', KeyboardEvent::SHIFT_MASK),
    b'W' => (Keycode::KEY_T,          'W', KeyboardEvent::SHIFT_MASK),
    b'Y' => (Keycode::KEY_Y,          'Y', KeyboardEvent::SHIFT_MASK),
    b'F' => (Keycode::KEY_U,          'F', KeyboardEvent::SHIFT_MASK),
    b'U' => (Keycode::KEY_I,          'U', KeyboardEvent::SHIFT_MASK),
    b'B' => (Keycode::KEY_O,          'B', KeyboardEvent::SHIFT_MASK),
    b':' => (Keycode::KEY_P,          ':', KeyboardEvent::SHIFT_MASK),
    b'{' => (Keycode::KEY_LEFTBRACE,  '{', KeyboardEvent::SHIFT_MASK),
    b'}' => (Keycode::KEY_RIGHTBRACE, '}', KeyboardEvent::SHIFT_MASK),
    b'D' => (Keycode::KEY_A,          'D', KeyboardEvent::SHIFT_MASK),
    b'S' => (Keycode::KEY_S,          'S', KeyboardEvent::SHIFT_MASK),
    b'T' => (Keycode::KEY_D,          'T', KeyboardEvent::SHIFT_MASK),
    b'N' => (Keycode::KEY_F,          'N', KeyboardEvent::SHIFT_MASK),
    b'R' => (Keycode::KEY_G,          'R', KeyboardEvent::SHIFT_MASK),
    b'I' => (Keycode::KEY_H,          'I', KeyboardEvent::SHIFT_MASK),
    b'A' => (Keycode::KEY_J,          'A', KeyboardEvent::SHIFT_MASK),
    b'E' => (Keycode::KEY_K,          'E', KeyboardEvent::SHIFT_MASK),
    b'O' => (Keycode::KEY_L,          'O', KeyboardEvent::SHIFT_MASK),
    b'H' => (Keycode::KEY_SEMICOLON,  'H', KeyboardEvent::SHIFT_MASK),
    b'"' => (Keycode::KEY_APOSTROPHE, '"', KeyboardEvent::SHIFT_MASK),
    b'Z' => (Keycode::KEY_Z,          'Z', KeyboardEvent::SHIFT_MASK),
    b'X' => (Keycode::KEY_X,          'X', KeyboardEvent::SHIFT_MASK),
    b'C' => (Keycode::KEY_C,          'C', KeyboardEvent::SHIFT_MASK),
    b'V' => (Keycode::KEY_V,          'V', KeyboardEvent::SHIFT_MASK),
    b'J' => (Keycode::KEY_B,          'J', KeyboardEvent::SHIFT_MASK),
    b'K' => (Keycode::KEY_N,          'K', KeyboardEvent::SHIFT_MASK),
    b'P' => (Keycode::KEY_M,          'P', KeyboardEvent::SHIFT_MASK),
    b'<' => (Keycode::KEY_COMMA,      '<', KeyboardEvent::SHIFT_MASK),
    b'>' => (Keycode::KEY_DOT,        '>', KeyboardEvent::SHIFT_MASK),
    b'?' => (Keycode::KEY_SLASH,      '?', KeyboardEvent::SHIFT_MASK),
};

pub static INVERTED_COLEMAK_MAP: [(u8, KeyboardEvent); 95] = keymap! {
    b'1' => (Keycode::KEY_1,          '1', 0),
    b'2' => (Keycode::KEY_2,          '2', 0),
    b'3' => (Keycode::KEY_3,          '3', 0),
    b'4' => (Keycode::KEY_4,          '4', 0),
    b'5' => (Keycode::KEY_5,          '5', 0),
    b'6' => (Keycode::KEY_6,          '6', 0),
    b'7' => (Keycode::KEY_7,          '7', 0),
    b'8' => (Keycode::KEY_8,          '8', 0),
    b'9' => (Keycode::KEY_9,          '9', 0),
    b'0' => (Keycode::KEY_0,          '0', 0),
    b'-' => (Keycode::KEY_MINUS,      '-', 0),
    b'=' => (Keycode::KEY_EQUAL,      '=', 0),
    b'\\' => (Keycode::KEY_BACKSLASH, '\\', 0),
    b'`' => (Keycode::KEY_GRAVE,      '`', 0),
    b'q' => (Keycode::KEY_Q,          'q', 0),
    b'w' => (Keycode::KEY_W,          'w', 0),
    b'f' => (Keycode::KEY_E,          'f', 0),
    b'p' => (Keycode::KEY_R,          'p', 0),
    b'g' => (Keycode::KEY_T,          'g', 0),
    b'j' => (Keycode::KEY_Y,          'j', 0),
    b'l' => (Keycode::KEY_U,          'l', 0),
    b'u' => (Keycode::KEY_I,          'u', 0),
    b'y' => (Keycode::KEY_O,          'y', 0),
    b';' => (Keycode::KEY_P,          ';', 0),
    b'[' => (Keycode::KEY_LEFTBRACE,  '[', 0),
    b']' => (Keycode::KEY_RIGHTBRACE, ']', 0),
    b'a' => (Keycode::KEY_A,          'a', 0),
    b'r' => (Keycode::KEY_S,          'r', 0),
    b's' => (Keycode::KEY_D,          's', 0),
    b't' => (Keycode::KEY_F,          't', 0),
    b'd' => (Keycode::KEY_G,          'd', 0),
    b'h' => (Keycode::KEY_H,          'h', 0),
    b'n' => (Keycode::KEY_J,          'n', 0),
    b'e' => (Keycode::KEY_K,          'e', 0),
    b'i' => (Keycode::KEY_L,          'i', 0),
    b'o' => (Keycode::KEY_SEMICOLON,  'o', 0),
    b'\'' => (Keycode::KEY_APOSTROPHE,'\'', 0),
    b'z' => (Keycode::KEY_Z,          'z', 0),
    b'x' => (Keycode::KEY_X,          'x', 0),
    b'c' => (Keycode::KEY_C,          'c', 0),
    b'v' => (Keycode::KEY_V,          'v', 0),
    b'b' => (Keycode::KEY_B,          'b', 0),
    b'k' => (Keycode::KEY_N,          'k', 0),
    b'm' => (Keycode::KEY_M,          'm', 0),
    b',' => (Keycode::KEY_COMMA,      ',', 0),
    b'.' => (Keycode::KEY_DOT,        '.', 0),
    b'/' => (Keycode::KEY_SLASH,      '/', 0),
    b' ' => (Keycode::KEY_SPACE,      ' ', 0),
    b'!' => (Keycode::KEY_1,          '!', KeyboardEvent::SHIFT_MASK),
    b'@' => (Keycode::KEY_2,          '@', KeyboardEvent::SHIFT_MASK),
    b'#' => (Keycode::KEY_3,          '#', KeyboardEvent::SHIFT_MASK),
    b'$' => (Keycode::KEY_4,          '$', KeyboardEvent::SHIFT_MASK),
    b'%' => (Keycode::KEY_5,          '%', KeyboardEvent::SHIFT_MASK),
    b'^' => (Keycode::KEY_6,          '^', KeyboardEvent::SHIFT_MASK),
    b'&' => (Keycode::KEY_7,          '&', KeyboardEvent::SHIFT_MASK),
    b'*' => (Keycode::KEY_8,          '*', KeyboardEvent::SHIFT_MASK),
    b'(' => (Keycode::KEY_9,          '(', KeyboardEvent::SHIFT_MASK),
    b')' => (Keycode::KEY_0,          ')', KeyboardEvent::SHIFT_MASK),
    b'_' => (Keycode::KEY_MINUS,      '_', KeyboardEvent::SHIFT_MASK),
    b'+' => (Keycode::KEY_EQUAL,      '+', KeyboardEvent::SHIFT_MASK),
    b'|' => (Keycode::KEY_BACKSLASH,  '|', KeyboardEvent::SHIFT_MASK),
    b'~' => (Keycode::KEY_GRAVE,      '~', KeyboardEvent::SHIFT_MASK),
    b'Q' => (Keycode::KEY_Q,          'Q', KeyboardEvent::SHIFT_MASK),
    b'W' => (Keycode::KEY_W,          'W', KeyboardEvent::SHIFT_MASK),
    b'F' => (Keycode::KEY_E,          'F', KeyboardEvent::SHIFT_MASK),
    b'P' => (Keycode::KEY_R,          'P', KeyboardEvent::SHIFT_MASK),
    b'G' => (Keycode::KEY_T,          'G', KeyboardEvent::SHIFT_MASK),
    b'J' => (Keycode::KEY_Y,          'J', KeyboardEvent::SHIFT_MASK),
    b'L' => (Keycode::KEY_U,          'L', KeyboardEvent::SHIFT_MASK),
    b'U' => (Keycode::KEY_I,          'U', KeyboardEvent::SHIFT_MASK),
    b'Y' => (Keycode::KEY_O,          'Y', KeyboardEvent::SHIFT_MASK),
    b':' => (Keycode::KEY_P,          ':', KeyboardEvent::SHIFT_MASK),
    b'{' => (Keycode::KEY_LEFTBRACE,  '{', KeyboardEvent::SHIFT_MASK),
    b'}' => (Keycode::KEY_RIGHTBRACE, '}', KeyboardEvent::SHIFT_MASK),
    b'A' => (Keycode::KEY_A,          'A', KeyboardEvent::SHIFT_MASK),
    b'R' => (Keycode::KEY_S,          'R', KeyboardEvent::SHIFT_MASK),
    b'S' => (Keycode::KEY_D,          'S', KeyboardEvent::SHIFT_MASK),
    b'T' => (Keycode::KEY_F,          'T', KeyboardEvent::SHIFT_MASK),
    b'D' => (Keycode::KEY_G,          'D', KeyboardEvent::SHIFT_MASK),
    b'H' => (Keycode::KEY_H,          'H', KeyboardEvent::SHIFT_MASK),
    b'N' => (Keycode::KEY_J,          'N', KeyboardEvent::SHIFT_MASK),
    b'E' => (Keycode::KEY_K,          'E', KeyboardEvent::SHIFT_MASK),
    b'I' => (Keycode::KEY_L,          'I', KeyboardEvent::SHIFT_MASK),
    b'O' => (Keycode::KEY_SEMICOLON,  'O', KeyboardEvent::SHIFT_MASK),
    b'"' => (Keycode::KEY_APOSTROPHE, '"', KeyboardEvent::SHIFT_MASK),
    b'Z' => (Keycode::KEY_Z,          'Z', KeyboardEvent::SHIFT_MASK),
    b'X' => (Keycode::KEY_X,          'X', KeyboardEvent::SHIFT_MASK),
    b'C' => (Keycode::KEY_C,          'C', KeyboardEvent::SHIFT_MASK),
    b'V' => (Keycode::KEY_V,          'V', KeyboardEvent::SHIFT_MASK),
    b'B' => (Keycode::KEY_B,          'B', KeyboardEvent::SHIFT_MASK),
    b'K' => (Keycode::KEY_N,          'K', KeyboardEvent::SHIFT_MASK),
    b'M' => (Keycode::KEY_M,          'M', KeyboardEvent::SHIFT_MASK),
    b'<' => (Keycode::KEY_COMMA,      '<', KeyboardEvent::SHIFT_MASK),
    b'>' => (Keycode::KEY_DOT,        '>', KeyboardEvent::SHIFT_MASK),
    b'?' => (Keycode::KEY_SLASH,      '?', KeyboardEvent::SHIFT_MASK),
};

pub static INVERTED_COLEMAK_DH_ANSI_MAP: [(u8, KeyboardEvent); 95] = keymap! {
    b'1' => (Keycode::KEY_1,          '1', 0),
    b'2' => (Keycode::KEY_2,          '2', 0),
    b'3' => (Keycode::KEY_3,          '3', 0),
    b'4' => (Keycode::KEY_4,          '4', 0),
    b'5' => (Keycode::KEY_5,          '5', 0),
    b'6' => (Keycode::KEY_6,          '6', 0),
    b'7' => (Keycode::KEY_7,          '7', 0),
    b'8' => (Keycode::KEY_8,          '8', 0),
    b'9' => (Keycode::KEY_9,          '9', 0),
    b'0' => (Keycode::KEY_0,          '0', 0),
    b'-' => (Keycode::KEY_MINUS,      '-', 0),
    b'=' => (Keycode::KEY_EQUAL,      '=', 0),
    b'\\' => (Keycode::KEY_BACKSLASH, '\\', 0),
    b'`' => (Keycode::KEY_GRAVE,      '`', 0),
    b'q' => (Keycode::KEY_Q,          'q', 0),
    b'w' => (Keycode::KEY_W,          'w', 0),
    b'f' => (Keycode::KEY_E,          'f', 0),
    b'p' => (Keycode::KEY_R,          'p', 0),
    b'b' => (Keycode::KEY_T,          'b', 0),
    b'j' => (Keycode::KEY_Y,          'j', 0),
    b'l' => (Keycode::KEY_U,          'l', 0),
    b'u' => (Keycode::KEY_I,          'u', 0),
    b'y' => (Keycode::KEY_O,          'y', 0),
    b';' => (Keycode::KEY_P,          ';', 0),
    b'[' => (Keycode::KEY_LEFTBRACE,  '[', 0),
    b']' => (Keycode::KEY_RIGHTBRACE, ']', 0),
    b'a' => (Keycode::KEY_A,          'a', 0),
    b'r' => (Keycode::KEY_S,          'r', 0),
    b's' => (Keycode::KEY_D,          's', 0),
    b't' => (Keycode::KEY_F,          't', 0),
    b'g' => (Keycode::KEY_G,          'g', 0),
    b'm' => (Keycode::KEY_H,          'm', 0),
    b'n' => (Keycode::KEY_J,          'n', 0),
    b'e' => (Keycode::KEY_K,          'e', 0),
    b'i' => (Keycode::KEY_L,          'i', 0),
    b'o' => (Keycode::KEY_SEMICOLON,  'o', 0),
    b'\'' => (Keycode::KEY_APOSTROPHE,'\'', 0),
    b'x' => (Keycode::KEY_Z,          'x', 0),
    b'c' => (Keycode::KEY_X,          'c', 0),
    b'd' => (Keycode::KEY_C,          'd', 0),
    b'v' => (Keycode::KEY_V,          'v', 0),
    b'z' => (Keycode::KEY_B,          'z', 0),
    b'k' => (Keycode::KEY_N,          'k', 0),
    b'h' => (Keycode::KEY_M,          'h', 0),
    b',' => (Keycode::KEY_COMMA,      ',', 0),
    b'.' => (Keycode::KEY_DOT,        '.', 0),
    b'/' => (Keycode::KEY_SLASH,      '/', 0),
    b' ' => (Keycode::KEY_SPACE,      ' ', 0),
    b'!' => (Keycode::KEY_1,          '!', KeyboardEvent::SHIFT_MASK),
    b'@' => (Keycode::KEY_2,          '@', KeyboardEvent::SHIFT_MASK),
    b'#' => (Keycode::KEY_3,          '#', KeyboardEvent::SHIFT_MASK),
    b'$' => (Keycode::KEY_4,          '$', KeyboardEvent::SHIFT_MASK),
    b'%' => (Keycode::KEY_5,          '%', KeyboardEvent::SHIFT_MASK),
    b'^' => (Keycode::KEY_6,          '^', KeyboardEvent::SHIFT_MASK),
    b'&' => (Keycode::KEY_7,          '&', KeyboardEvent::SHIFT_MASK),
    b'*' => (Keycode::KEY_8,          '*', KeyboardEvent::SHIFT_MASK),
    b'(' => (Keycode::KEY_9,          '(', KeyboardEvent::SHIFT_MASK),
    b')' => (Keycode::KEY_0,          ')', KeyboardEvent::SHIFT_MASK),
    b'_' => (Keycode::KEY_MINUS,      '_', KeyboardEvent::SHIFT_MASK),
    b'+' => (Keycode::KEY_EQUAL,      '+', KeyboardEvent::SHIFT_MASK),
    b'|' => (Keycode::KEY_BACKSLASH,  '|', KeyboardEvent::SHIFT_MASK),
    b'~' => (Keycode::KEY_GRAVE,      '~', KeyboardEvent::SHIFT_MASK),
    b'Q' => (Keycode::KEY_Q,          'Q', KeyboardEvent::SHIFT_MASK),
    b'W' => (Keycode::KEY_W,          'W', KeyboardEvent::SHIFT_MASK),
    b'F' => (Keycode::KEY_E,          'F', KeyboardEvent::SHIFT_MASK),
    b'P' => (Keycode::KEY_R,          'P', KeyboardEvent::SHIFT_MASK),
    b'B' => (Keycode::KEY_T,          'B', KeyboardEvent::SHIFT_MASK),
    b'J' => (Keycode::KEY_Y,          'J', KeyboardEvent::SHIFT_MASK),
    b'L' => (Keycode::KEY_U,          'L', KeyboardEvent::SHIFT_MASK),
    b'U' => (Keycode::KEY_I,          'U', KeyboardEvent::SHIFT_MASK),
    b'Y' => (Keycode::KEY_O,          'Y', KeyboardEvent::SHIFT_MASK),
    b':' => (Keycode::KEY_P,          ':', KeyboardEvent::SHIFT_MASK),
    b'{' => (Keycode::KEY_LEFTBRACE,  '{', KeyboardEvent::SHIFT_MASK),
    b'}' => (Keycode::KEY_RIGHTBRACE, '}', KeyboardEvent::SHIFT_MASK),
    b'A' => (Keycode::KEY_A,          'A', KeyboardEvent::SHIFT_MASK),
    b'R' => (Keycode::KEY_S,          'R', KeyboardEvent::SHIFT_MASK),
    b'S' => (Keycode::KEY_D,          'S', KeyboardEvent::SHIFT_MASK),
    b'T' => (Keycode::KEY_F,          'T', KeyboardEvent::SHIFT_MASK),
    b'G' => (Keycode::KEY_G,          'G', KeyboardEvent::SHIFT_MASK),
    b'M' => (Keycode::KEY_H,          'M', KeyboardEvent::SHIFT_MASK),
    b'N' => (Keycode::KEY_J,          'N', KeyboardEvent::SHIFT_MASK),
    b'E' => (Keycode::KEY_K,          'E', KeyboardEvent::SHIFT_MASK),
    b'I' => (Keycode::KEY_L,          'I', KeyboardEvent::SHIFT_MASK),
    b'O' => (Keycode::KEY_SEMICOLON,  'O', KeyboardEvent::SHIFT_MASK),
    b'"' => (Keycode::KEY_APOSTROPHE, '"', KeyboardEvent::SHIFT_MASK),
    b'X' => (Keycode::KEY_Z,          'X', KeyboardEvent::SHIFT_MASK),
    b'C' => (Keycode::KEY_X,          'C', KeyboardEvent::SHIFT_MASK),
    b'D' => (Keycode::KEY_C,          'D', KeyboardEvent::SHIFT_MASK),
    b'V' => (Keycode::KEY_V,          'V', KeyboardEvent::SHIFT_MASK),
    b'Z' => (Keycode::KEY_B,          'Z', KeyboardEvent::SHIFT_MASK),
    b'K' => (Keycode::KEY_N,          'K', KeyboardEvent::SHIFT_MASK),
    b'H' => (Keycode::KEY_M,          'H', KeyboardEvent::SHIFT_MASK),
    b'<' => (Keycode::KEY_COMMA,      '<', KeyboardEvent::SHIFT_MASK),
    b'>' => (Keycode::KEY_DOT,        '>', KeyboardEvent::SHIFT_MASK),
    b'?' => (Keycode::KEY_SLASH,      '?', KeyboardEvent::SHIFT_MASK),
};

pub static INVERTED_COLEMAK_DH_ORTH_MAP: [(u8, KeyboardEvent); 95] = keymap! {
    b'1' => (Keycode::KEY_1,          '1', 0),
    b'2' => (Keycode::KEY_2,          '2', 0),
    b'3' => (Keycode::KEY_3,          '3', 0),
    b'4' => (Keycode::KEY_4,          '4', 0),
    b'5' => (Keycode::KEY_5,          '5', 0),
    b'6' => (Keycode::KEY_6,          '6', 0),
    b'7' => (Keycode::KEY_7,          '7', 0),
    b'8' => (Keycode::KEY_8,          '8', 0),
    b'9' => (Keycode::KEY_9,          '9', 0),
    b'0' => (Keycode::KEY_0,          '0', 0),
    b'-' => (Keycode::KEY_MINUS,      '-', 0),
    b'=' => (Keycode::KEY_EQUAL,      '=', 0),
    b'\\' => (Keycode::KEY_BACKSLASH, '\\', 0),
    b'`' => (Keycode::KEY_GRAVE,      '`', 0),
    b'q' => (Keycode::KEY_Q,          'q', 0),
    b'w' => (Keycode::KEY_W,          'w', 0),
    b'f' => (Keycode::KEY_E,          'f', 0),
    b'p' => (Keycode::KEY_R,          'p', 0),
    b'b' => (Keycode::KEY_T,          'b', 0),
    b'j' => (Keycode::KEY_Y,          'j', 0),
    b'l' => (Keycode::KEY_U,          'l', 0),
    b'u' => (Keycode::KEY_I,          'u', 0),
    b'y' => (Keycode::KEY_O,          'y', 0),
    b';' => (Keycode::KEY_P,          ';', 0),
    b'[' => (Keycode::KEY_LEFTBRACE,  '[', 0),
    b']' => (Keycode::KEY_RIGHTBRACE, ']', 0),
    b'a' => (Keycode::KEY_A,          'a', 0),
    b'r' => (Keycode::KEY_S,          'r', 0),
    b's' => (Keycode::KEY_D,          's', 0),
    b't' => (Keycode::KEY_F,          't', 0),
    b'g' => (Keycode::KEY_G,          'g', 0),
    b'm' => (Keycode::KEY_H,          'm', 0),
    b'n' => (Keycode::KEY_J,          'n', 0),
    b'e' => (Keycode::KEY_K,          'e', 0),
    b'i' => (Keycode::KEY_L,          'i', 0),
    b'o' => (Keycode::KEY_SEMICOLON,  'o', 0),
    b'\'' => (Keycode::KEY_APOSTROPHE,'\'', 0),
    b'z' => (Keycode::KEY_Z,          'z', 0),
    b'x' => (Keycode::KEY_X,          'x', 0),
    b'c' => (Keycode::KEY_C,          'c', 0),
    b'd' => (Keycode::KEY_V,          'd', 0),
    b'v' => (Keycode::KEY_B,          'v', 0),
    b'k' => (Keycode::KEY_N,          'k', 0),
    b'h' => (Keycode::KEY_M,          'h', 0),
    b',' => (Keycode::KEY_COMMA,      ',', 0),
    b'.' => (Keycode::KEY_DOT,        '.', 0),
    b'/' => (Keycode::KEY_SLASH,      '/', 0),
    b' ' => (Keycode::KEY_SPACE,      ' ', 0),
    b'!' => (Keycode::KEY_1,          '!', KeyboardEvent::SHIFT_MASK),
    b'@' => (Keycode::KEY_2,          '@', KeyboardEvent::SHIFT_MASK),
    b'#' => (Keycode::KEY_3,          '#', KeyboardEvent::SHIFT_MASK),
    b'$' => (Keycode::KEY_4,          '$', KeyboardEvent::SHIFT_MASK),
    b'%' => (Keycode::KEY_5,          '%', KeyboardEvent::SHIFT_MASK),
    b'^' => (Keycode::KEY_6,          '^', KeyboardEvent::SHIFT_MASK),
    b'&' => (Keycode::KEY_7,          '&', KeyboardEvent::SHIFT_MASK),
    b'*' => (Keycode::KEY_8,          '*', KeyboardEvent::SHIFT_MASK),
    b'(' => (Keycode::KEY_9,          '(', KeyboardEvent::SHIFT_MASK),
    b')' => (Keycode::KEY_0,          ')', KeyboardEvent::SHIFT_MASK),
    b'_' => (Keycode::KEY_MINUS,      '_', KeyboardEvent::SHIFT_MASK),
    b'+' => (Keycode::KEY_EQUAL,      '+', KeyboardEvent::SHIFT_MASK),
    b'|' => (Keycode::KEY_BACKSLASH,  '|', KeyboardEvent::SHIFT_MASK),
    b'~' => (Keycode::KEY_GRAVE,      '~', KeyboardEvent::SHIFT_MASK),
    b'Q' => (Keycode::KEY_Q,          'Q', KeyboardEvent::SHIFT_MASK),
    b'W' => (Keycode::KEY_W,          'W', KeyboardEvent::SHIFT_MASK),
    b'F' => (Keycode::KEY_E,          'F', KeyboardEvent::SHIFT_MASK),
    b'P' => (Keycode::KEY_R,          'P', KeyboardEvent::SHIFT_MASK),
    b'B' => (Keycode::KEY_T,          'B', KeyboardEvent::SHIFT_MASK),
    b'J' => (Keycode::KEY_Y,          'J', KeyboardEvent::SHIFT_MASK),
    b'L' => (Keycode::KEY_U,          'L', KeyboardEvent::SHIFT_MASK),
    b'U' => (Keycode::KEY_I,          'U', KeyboardEvent::SHIFT_MASK),
    b'Y' => (Keycode::KEY_O,          'Y', KeyboardEvent::SHIFT_MASK),
    b':' => (Keycode::KEY_P,          ':', KeyboardEvent::SHIFT_MASK),
    b'{' => (Keycode::KEY_LEFTBRACE,  '{', KeyboardEvent::SHIFT_MASK),
    b'}' => (Keycode::KEY_RIGHTBRACE, '}', KeyboardEvent::SHIFT_MASK),
    b'A' => (Keycode::KEY_A,          'A', KeyboardEvent::SHIFT_MASK),
    b'R' => (Keycode::KEY_S,          'R', KeyboardEvent::SHIFT_MASK),
    b'S' => (Keycode::KEY_D,          'S', KeyboardEvent::SHIFT_MASK),
    b'T' => (Keycode::KEY_F,          'T', KeyboardEvent::SHIFT_MASK),
    b'G' => (Keycode::KEY_G,          'G', KeyboardEvent::SHIFT_MASK),
    b'M' => (Keycode::KEY_H,          'M', KeyboardEvent::SHIFT_MASK),
    b'N' => (Keycode::KEY_J,          'N', KeyboardEvent::SHIFT_MASK),
    b'E' => (Keycode::KEY_K,          'E', KeyboardEvent::SHIFT_MASK),
    b'I' => (Keycode::KEY_L,          'I', KeyboardEvent::SHIFT_MASK),
    b'O' => (Keycode::KEY_SEMICOLON,  'O', KeyboardEvent::SHIFT_MASK),
    b'"' => (Keycode::KEY_APOSTROPHE, '"', KeyboardEvent::SHIFT_MASK),
    b'Z' => (Keycode::KEY_Z,          'Z', KeyboardEvent::SHIFT_MASK),
    b'X' => (Keycode::KEY_X,          'X', KeyboardEvent::SHIFT_MASK),
    b'C' => (Keycode::KEY_C,          'C', KeyboardEvent::SHIFT_MASK),
    b'D' => (Keycode::KEY_V,          'D', KeyboardEvent::SHIFT_MASK),
    b'V' => (Keycode::KEY_B,          'V', KeyboardEvent::SHIFT_MASK),
    b'K' => (Keycode::KEY_N,          'K', KeyboardEvent::SHIFT_MASK),
    b'H' => (Keycode::KEY_M,          'H', KeyboardEvent::SHIFT_MASK),
    b'<' => (Keycode::KEY_COMMA,      '<', KeyboardEvent::SHIFT_MASK),
    b'>' => (Keycode::KEY_DOT,        '>', KeyboardEvent::SHIFT_MASK),
    b'?' => (Keycode::KEY_SLASH,      '?', KeyboardEvent::SHIFT_MASK),
};

pub static INVERTED_WORKMAN_MAP: [(u8, KeyboardEvent); 95] = keymap! {
    b'1' => (Keycode::KEY_1,          '1', 0),
    b'2' => (Keycode::KEY_2,          '2', 0),
    b'3' => (Keycode::KEY_3,          '3', 0),
    b'4' => (Keycode::KEY_4,          '4', 0),
    b'5' => (Keycode::KEY_5,          '5', 0),
    b'6' => (Keycode::KEY_6,          '6', 0),
    b'7' => (Keycode::KEY_7,          '7', 0),
    b'8' => (Keycode::KEY_8,          '8', 0),
    b'9' => (Keycode::KEY_9,          '9', 0),
    b'0' => (Keycode::KEY_0,          '0', 0),
    b'-' => (Keycode::KEY_MINUS,      '-', 0),
    b'=' => (Keycode::KEY_EQUAL,      '=', 0),
    b'\\' => (Keycode::KEY_BACKSLASH, '\\', 0),
    b'`' => (Keycode::KEY_GRAVE,      '`', 0),
    b'q' => (Keycode::KEY_Q,          'q', 0),
    b'd' => (Keycode::KEY_W,          'd', 0),
    b'r' => (Keycode::KEY_E,          'r', 0),
    b'w' => (Keycode::KEY_R,          'w', 0),
    b'b' => (Keycode::KEY_T,          'b', 0),
    b'j' => (Keycode::KEY_Y,          'j', 0),
    b'f' => (Keycode::KEY_U,          'f', 0),
    b'u' => (Keycode::KEY_I,          'u', 0),
    b'p' => (Keycode::KEY_O,          'p', 0),
    b';' => (Keycode::KEY_P,          ';', 0),
    b'[' => (Keycode::KEY_LEFTBRACE,  '[', 0),
    b']' => (Keycode::KEY_RIGHTBRACE, ']', 0),
    b'a' => (Keycode::KEY_A,          'a', 0),
    b's' => (Keycode::KEY_S,          's', 0),
    b'h' => (Keycode::KEY_D,          'h', 0),
    b't' => (Keycode::KEY_F,          't', 0),
    b'g' => (Keycode::KEY_G,          'g', 0),
    b'y' => (Keycode::KEY_H,          'y', 0),
    b'n' => (Keycode::KEY_J,          'n', 0),
    b'e' => (Keycode::KEY_K,          'e', 0),
    b'o' => (Keycode::KEY_L,          'o', 0),
    b'i' => (Keycode::KEY_SEMICOLON,  'i', 0),
    b'\'' => (Keycode::KEY_APOSTROPHE,'\'', 0),
    b'z' => (Keycode::KEY_Z,          'z', 0),
    b'x' => (Keycode::KEY_X,          'x', 0),
    b'm' => (Keycode::KEY_C,          'm', 0),
    b'c' => (Keycode::KEY_V,          'c', 0),
    b'v' => (Keycode::KEY_B,          'v', 0),
    b'k' => (Keycode::KEY_N,          'k', 0),
    b'l' => (Keycode::KEY_M,          'l', 0),
    b',' => (Keycode::KEY_COMMA,      ',', 0),
    b'.' => (Keycode::KEY_DOT,        '.', 0),
    b'/' => (Keycode::KEY_SLASH,      '/', 0),
    b' ' => (Keycode::KEY_SPACE,      ' ', 0),
    b'!' => (Keycode::KEY_1,          '!', KeyboardEvent::SHIFT_MASK),
    b'@' => (Keycode::KEY_2,          '@', KeyboardEvent::SHIFT_MASK),
    b'#' => (Keycode::KEY_3,          '#', KeyboardEvent::SHIFT_MASK),
    b'$' => (Keycode::KEY_4,          '$', KeyboardEvent::SHIFT_MASK),
    b'%' => (Keycode::KEY_5,          '%', KeyboardEvent::SHIFT_MASK),
    b'^' => (Keycode::KEY_6,          '^', KeyboardEvent::SHIFT_MASK),
    b'&' => (Keycode::KEY_7,          '&', KeyboardEvent::SHIFT_MASK),
    b'*' => (Keycode::KEY_8,          '*', KeyboardEvent::SHIFT_MASK),
    b'(' => (Keycode::KEY_9,          '(', KeyboardEvent::SHIFT_MASK),
    b')' => (Keycode::KEY_0,          ')', KeyboardEvent::SHIFT_MASK),
    b'_' => (Keycode::KEY_MINUS,      '_', KeyboardEvent::SHIFT_MASK),
    b'+' => (Keycode::KEY_EQUAL,      '+', KeyboardEvent::SHIFT_MASK),
    b'|' => (Keycode::KEY_BACKSLASH,  '|', KeyboardEvent::SHIFT_MASK),
    b'~' => (Keycode::KEY_GRAVE,      '~', KeyboardEvent::SHIFT_MASK),
    b'Q' => (Keycode::KEY_Q,          'Q', KeyboardEvent::SHIFT_MASK),
    b'D' => (Keycode::KEY_W,          'D', KeyboardEvent::SHIFT_MASK),
    b'R' => (Keycode::KEY_E,          'R', KeyboardEvent::SHIFT_MASK),
    b'W' => (Keycode::KEY_R,          'W', KeyboardEvent::SHIFT_MASK),
    b'B' => (Keycode::KEY_T,          'B', KeyboardEvent::SHIFT_MASK),
    b'J' => (Keycode::KEY_Y,          'J', KeyboardEvent::SHIFT_MASK),
    b'F' => (Keycode::KEY_U,          'F', KeyboardEvent::SHIFT_MASK),
    b'U' => (Keycode::KEY_I,          'U', KeyboardEvent::SHIFT_MASK),
    b'P' => (Keycode::KEY_O,          'P', KeyboardEvent::SHIFT_MASK),
    b':' => (Keycode::KEY_P,          ':', KeyboardEvent::SHIFT_MASK),
    b'{' => (Keycode::KEY_LEFTBRACE,  '{', KeyboardEvent::SHIFT_MASK),
    b'}' => (Keycode::KEY_RIGHTBRACE, '}', KeyboardEvent::SHIFT_MASK),
    b'A' => (Keycode::KEY_A,          'A', KeyboardEvent::SHIFT_MASK),
    b'S' => (Keycode::KEY_S,          'S', KeyboardEvent::SHIFT_MASK),
    b'H' => (Keycode::KEY_D,          'H', KeyboardEvent::SHIFT_MASK),
    b'T' => (Keycode::KEY_F,          'T', KeyboardEvent::SHIFT_MASK),
    b'G' => (Keycode::KEY_G,          'G', KeyboardEvent::SHIFT_MASK),
    b'Y' => (Keycode::KEY_H,          'Y', KeyboardEvent::SHIFT_MASK),
    b'N' => (Keycode::KEY_J,          'N', KeyboardEvent::SHIFT_MASK),
    b'E' => (Keycode::KEY_K,          'E', KeyboardEvent::SHIFT_MASK),
    b'O' => (Keycode::KEY_L,          'O', KeyboardEvent::SHIFT_MASK),
    b'I' => (Keycode::KEY_SEMICOLON,  'I', KeyboardEvent::SHIFT_MASK),
    b'"' => (Keycode::KEY_APOSTROPHE, '"', KeyboardEvent::SHIFT_MASK),
    b'Z' => (Keycode::KEY_Z,          'Z', KeyboardEvent::SHIFT_MASK),
    b'X' => (Keycode::KEY_X,          'X', KeyboardEvent::SHIFT_MASK),
    b'M' => (Keycode::KEY_C,          'M', KeyboardEvent::SHIFT_MASK),
    b'C' => (Keycode::KEY_V,          'C', KeyboardEvent::SHIFT_MASK),
    b'V' => (Keycode::KEY_B,          'V', KeyboardEvent::SHIFT_MASK),
    b'K' => (Keycode::KEY_N,          'K', KeyboardEvent::SHIFT_MASK),
    b'L' => (Keycode::KEY_M,          'L', KeyboardEvent::SHIFT_MASK),
    b'<' => (Keycode::KEY_COMMA,      '<', KeyboardEvent::SHIFT_MASK),
    b'>' => (Keycode::KEY_DOT,        '>', KeyboardEvent::SHIFT_MASK),
    b'?' => (Keycode::KEY_SLASH,      '?', KeyboardEvent::SHIFT_MASK),
};
